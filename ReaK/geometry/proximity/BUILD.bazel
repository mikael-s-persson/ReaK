#
# Copyright 2024 Sven Mikael Persson
#

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_library(
  name = "proximity",
  srcs = [
    "prox_box_box.cc",
    "prox_ccylinder_box.cc",
    "prox_ccylinder_ccylinder.cc",
    "prox_ccylinder_cylinder.cc",
    "prox_circle_circle.cc",
    "prox_circle_crect.cc",
    "prox_circle_rectangle.cc",
    "prox_crect_crect.cc",
    "prox_crect_rectangle.cc",
    "prox_cylinder_box.cc",
    "prox_cylinder_cylinder.cc",
    "prox_fundamentals_2D.cc",
    "prox_fundamentals_3D.cc",
    "proximity_finder_2D.cc",
    "proximity_finder_3D.cc",
    "proximity_record_2D.cc",
    "proximity_record_3D.cc",
    "prox_plane_box.cc",
    "prox_plane_ccylinder.cc",
    "prox_plane_cylinder.cc",
    "prox_plane_plane.cc",
    "prox_plane_sphere.cc",
    "prox_rectangle_rectangle.cc",
    "prox_sphere_box.cc",
    "prox_sphere_ccylinder.cc",
    "prox_sphere_cylinder.cc",
    "prox_sphere_sphere.cc",
    "proxy_query_model.cc",
  ],
  hdrs = [
    "prox_box_box.h",
    "prox_ccylinder_box.h",
    "prox_ccylinder_ccylinder.h",
    "prox_ccylinder_cylinder.h",
    "prox_circle_circle.h",
    "prox_circle_crect.h",
    "prox_circle_rectangle.h",
    "prox_crect_crect.h",
    "prox_crect_rectangle.h",
    "prox_cylinder_box.h",
    "prox_cylinder_cylinder.h",
    "prox_fundamentals_2D.h",
    "prox_fundamentals_3D.h",
    "proximity_finder_2D.h",
    "proximity_finder_3D.h",
    "proximity_record_2D.h",
    "proximity_record_3D.h",
    "prox_plane_box.h",
    "prox_plane_ccylinder.h",
    "prox_plane_cylinder.h",
    "prox_plane_plane.h",
    "prox_plane_sphere.h",
    "prox_rectangle_rectangle.h",
    "prox_sphere_box.h",
    "prox_sphere_ccylinder.h",
    "prox_sphere_cylinder.h",
    "prox_sphere_sphere.h",
    "proxy_query_model.h",
  ],
  deps = [
    "//ReaK/core/base",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
    "//ReaK/math/optimization",
  ],
)

cc_binary(
  name = "proximity_perf",
  srcs = [
    "proximity_perf.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/geometry/shapes",
  ],
)

cc_binary(
  name = "build_X8_quadrotor_geom",
  srcs = [
    "build_X8_quadrotor_geom.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/core/serialization",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
  ],
)

cc_binary(
  name = "build_X8_obstacle_courses",
  srcs = [
    "build_X8_obstacle_courses.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/core/serialization",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
  ],
)

cc_binary(
  name = "build_MD148_lab",
  srcs = [
    "build_MD148_lab.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/core/serialization",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
    "@com_google_absl//absl/flags:flag",
    "@com_google_absl//absl/flags:parse",
  ],
)

cc_binary(
  name = "proximity_nlp_test",
  srcs = [
    "proximity_nlp_test.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
  ],
)

cc_binary(
  name = "proximity_gjk_test",
  srcs = [
    "proximity_gjk_test.cc",
  ],
  deps = [
    ":proximity",
    "//ReaK/core/base",
    "//ReaK/geometry/shapes",
    "//ReaK/math/lin_alg",
    "//ReaK/math/kinetostatics",
  ],
)
